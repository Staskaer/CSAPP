
multvec.o:     file format pe-x86-64


Disassembly of section .text:

0000000000000000 <multvec>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 4d 10          	mov    %rcx,0x10(%rbp)
   c:	48 89 55 18          	mov    %rdx,0x18(%rbp)
  10:	4c 89 45 20          	mov    %r8,0x20(%rbp)
  14:	44 89 4d 28          	mov    %r9d,0x28(%rbp)
  18:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 1e <multvec+0x1e>
  1e:	83 c0 01             	add    $0x1,%eax
  21:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 27 <multvec+0x27>
  27:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  2e:	eb 4d                	jmp    7d <multvec+0x7d>
  30:	8b 45 fc             	mov    -0x4(%rbp),%eax
  33:	48 98                	cltq   
  35:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  3c:	00 
  3d:	48 8b 45 10          	mov    0x10(%rbp),%rax
  41:	48 01 d0             	add    %rdx,%rax
  44:	44 8b 00             	mov    (%rax),%r8d
  47:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4a:	48 98                	cltq   
  4c:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  53:	00 
  54:	48 8b 45 18          	mov    0x18(%rbp),%rax
  58:	48 01 d0             	add    %rdx,%rax
  5b:	8b 08                	mov    (%rax),%ecx
  5d:	8b 45 fc             	mov    -0x4(%rbp),%eax
  60:	48 98                	cltq   
  62:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  69:	00 
  6a:	48 8b 45 20          	mov    0x20(%rbp),%rax
  6e:	48 01 c2             	add    %rax,%rdx
  71:	44 89 c0             	mov    %r8d,%eax
  74:	0f af c1             	imul   %ecx,%eax
  77:	89 02                	mov    %eax,(%rdx)
  79:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  7d:	8b 45 fc             	mov    -0x4(%rbp),%eax
  80:	3b 45 28             	cmp    0x28(%rbp),%eax
  83:	7c ab                	jl     30 <multvec+0x30>
  85:	90                   	nop
  86:	48 83 c4 10          	add    $0x10,%rsp
  8a:	5d                   	pop    %rbp
  8b:	c3                   	retq   
  8c:	90                   	nop
  8d:	90                   	nop
  8e:	90                   	nop
  8f:	90                   	nop

Disassembly of section .bss:

0000000000000000 <multcnt>:
	...

Disassembly of section .xdata:

0000000000000000 <.xdata>:
   0:	01 08                	add    %ecx,(%rax)
   2:	03 05 08 12 04 03    	add    0x3041208(%rip),%eax        # 3041210 <.xdata+0x3041210>
   8:	01 50 00             	add    %edx,0x0(%rax)
	...

Disassembly of section .pdata:

0000000000000000 <.pdata>:
   0:	00 00                	add    %al,(%rax)
   2:	00 00                	add    %al,(%rax)
   4:	8c 00                	mov    %es,(%rax)
   6:	00 00                	add    %al,(%rax)
   8:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rdata$zzz:

0000000000000000 <.rdata$zzz>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 78 38             	sub    %bh,0x38(%rax)
   8:	36 5f                	ss pop %rdi
   a:	36 34 2d             	ss xor $0x2d,%al
   d:	70 6f                	jo     7e <.rdata$zzz+0x7e>
   f:	73 69                	jae    7a <.rdata$zzz+0x7a>
  11:	78 2d                	js     40 <.rdata$zzz+0x40>
  13:	73 65                	jae    7a <.rdata$zzz+0x7a>
  15:	68 2d 72 65 76       	pushq  $0x7665722d
  1a:	30 2c 20             	xor    %ch,(%rax,%riz,1)
  1d:	42 75 69             	rex.X jne 89 <.rdata$zzz+0x89>
  20:	6c                   	insb   (%dx),%es:(%rdi)
  21:	74 20                	je     43 <.rdata$zzz+0x43>
  23:	62                   	(bad)  
  24:	79 20                	jns    46 <.rdata$zzz+0x46>
  26:	4d 69 6e 47 57 2d 57 	imul   $0x36572d57,0x47(%r14),%r13
  2d:	36 
  2e:	34 20                	xor    $0x20,%al
  30:	70 72                	jo     a4 <.rdata$zzz+0xa4>
  32:	6f                   	outsl  %ds:(%rsi),(%dx)
  33:	6a 65                	pushq  $0x65
  35:	63 74 29 20          	movslq 0x20(%rcx,%rbp,1),%esi
  39:	38 2e                	cmp    %ch,(%rsi)
  3b:	31 2e                	xor    %ebp,(%rsi)
  3d:	30 00                	xor    %al,(%rax)
	...
